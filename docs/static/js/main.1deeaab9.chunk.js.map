{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categorias","type","value","onChange","target","getGifs","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"6LAqCeA,EAlCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAiBrC,OACI,sBACIC,SAZa,SAAAC,GACjBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAmBO,OAC3CN,EAAc,MAMlB,SAGK,uBACGO,KAAK,OACLC,MAAOT,EACPU,SApBc,SAAAP,GACtBF,EAAcE,EAAEQ,OAAOF,a,uBCNlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCWLO,EAXK,SAAC,GAAW,IAAVL,EAAS,EAATA,IAEVR,EAAeQ,EAAfR,IAAMU,EAASF,EAATE,MACd,OACI,sBAAKI,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCqBDO,EAxBC,SAAC,GAAiB,IAAhBnB,EAAe,EAAfA,UAAe,ECDL,SAAEA,GAAgB,IAAD,EAEfd,mBAAS,CAC/BqB,KAAK,GACLa,SAAS,IAJ4B,mBAElCC,EAFkC,KAE3BC,EAF2B,KAmBzC,OAZAC,qBAAU,WAENxB,EAASC,GACJwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAIvB,CAACpB,IAEIqB,EDfmBK,CAAc1B,GAAhCO,EAHqB,EAGrBA,KAAMa,EAHe,EAGfA,QAGd,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAElDoB,GAAW,mBAAGJ,UAAU,mCAAb,wBAEZ,qBAAKA,UAAU,YAAf,SACMT,EAAKE,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,CAEIA,IAAKA,GADAA,EAAIC,aEWlBgB,EA3BM,WAAM,MAIazC,mBAAS,CAAC,cAJvB,mBAIhBQ,EAJgB,KAIJT,EAJI,KAMvB,OACI,qCACI,8CACA,cAAC,EAAD,CACIS,WAAYA,EACZT,cAAeA,IAEnB,uBAEA,6BACKS,EAAWe,KAAI,SAAAT,GAAS,OACrB,cAAC,EAAD,CAEIA,UAAWA,GADNA,YChB7B4B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1deeaab9.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({setCategorias}) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = e => {\r\n        setInputValue(e.target.value);\r\n    }\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2 ){\r\n            setCategorias(categorias => [inputValue,...categorias]) //Sin la necesidad de mandar por props categorias\r\n            setInputValue('')\r\n        }\r\n\r\n    }\r\n\r\n    return (  \r\n        <form \r\n            onSubmit={handleSubmit}\r\n        >\r\n             <input \r\n                type=\"text\"\r\n                value={inputValue} \r\n                onChange={ handleInputChange } \r\n            />\r\n        </form>  \r\n    );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired,\r\n}\r\n \r\nexport default AddCategory;","\r\n\r\nexport const getGifs = async( categoria ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(categoria)}&limit=10&api_key=XPJ65lyvIKm1sUXsuOCk25syADaKT3Te`\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url //el ? es para aseguranos que viene la propiedad de images sino obviarlo\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nconst GifGridItem = ({img}) => {\r\n\r\n    const { url , title} = img\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n// import { getGifs } from '../helpers/getGifts';\r\nimport GifGridItem from './GifGridItem'\r\n\r\nconst GifGrid = ({categoria}) => {\r\n\r\n\r\n    const { data, loading } = useFetchGifs( categoria ); \r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{categoria}</h3>\r\n\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\r\n            \r\n            <div className=\"card-grid\">\r\n                { data.map(img => (\r\n                    <GifGridItem \r\n                        key={img.id}\r\n                        img={img}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = ( categoria ) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading: true,\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs( categoria )\r\n            .then( imgs => {\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false,    \r\n                });\r\n            })\r\n        \r\n    },[categoria]); //Hace el efecto cuando cambie la categoria\r\n\r\n    return state\r\n}","import React, { useState } from 'react'\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    // const categorias = ['One Punch','Samurai X', 'Dragon Ball Z']\r\n\r\n    const [categorias, setCategorias] = useState(['One Punch'])\r\n\r\n    return ( \r\n        <> \r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory \r\n                categorias={categorias}\r\n                setCategorias={setCategorias}\r\n            />\r\n            <hr />\r\n\r\n            <ol>\r\n                {categorias.map(categoria => (\r\n                    <GifGrid\r\n                        key={categoria} \r\n                        categoria={categoria}\r\n                    />\r\n                ))}\r\n            </ol>\r\n        </>\r\n    );\r\n}\r\n \r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}